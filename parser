
# PRUEBA PARSER.txt

fileName = str(input("Input your program's file name to validate its syntax: "))

file = open(fileName, mode="r")

rawProgram = (file.read())
file.close()

program = rawProgram.replace("\n", "")
program = program.replace(" ", "")
program = program.split(";")

# El programa siempre empieza siendo correcto hasta que se pruebe lo contrario.

isCorrect = True

# TODO Loop para que vaya linea por linea chequeando que función se usa y llame la función respectiva.

for line in program:
    if program.index(line) == 0 and line.startswith("PROG") == False:
        isCorrect = False
        break
        

    if program.index(line) == (len(program) -1) and line.endswith("GORP") == False:
        isCorrect = False
        break
        


# Print dependiendo de si el programa es correcto o no

if isCorrect == True:
    print("Congratulations! Your program has valid syntax.")

else:
    print("Unfortunately your program does not have a valid syntax...")

# TODO J
def cName(line):
    line = line.replace("var","")
    line = line.replace("PROG", "")
    variable_list = line.split(",")
        

    if "=" in line:
        is_variable = line[0]

        if is_variable not in variable_list:
            print("This is not a valid program")

        try:
            isInt = int(line[-1])
            

        except ValueError:
            print("This is not a valid program")
    
def cWalk(line, variable_list):
    if "walk" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False


    

# TODO N
def cJump(line, variable_list):
    if "jump" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False


    

def cJumpTo(line):
    pass

def cVeer(line):
    pass

def cLook(line):
    pass

# TODO N
def cDrop(line, variable_list):

    if "drop" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False

# TODO N
def cGrab(line, variable_list):

    if "grab" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False

# TODO N
def cGet(line, variable_list):

    if "get" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False
    

# TODO N
def cFree(line, variable_list):

    if "free" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False
    

# TODO N
def cPop(line, variable_list):

    if "pop" in line:
        first_par_index = line.index("(")
        last_par_index = line.index(")")
        is_variable = (line[first_par_index+1 : last_par_index])

        if is_variable == int:
            isCorrect == False
        if is_variable not in variable_list:
            isCorrect == False

def cWalk2variables(line):
    pass

# TODO N
def cConditionals(line):
    pass

# TODO J
def cLoop(line):
    pass

# TODO J
def cRepeat(line):
    pass

# Loop Nico 
#for line in program:
#    if "var" in line:
#        line = line.replace("var","")
#        line = line.replace("PROG", "")
#        variable_list = line.split(",")
#        
#
#    if "=" in line:
#        is_variable = line[0]

#        if is_variable not in variable_list:
#            print("This is not a valid program")

#        try:
#            isInt = int(line[-1])
            

#        except ValueError:
#            print("This is not a valid program")